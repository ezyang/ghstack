from ghstack.test_prelude import *

init_test()

# make release branch
git("branch", "release", "master")

# diverge release and regular branch
git("checkout", "master")
commit("M")
git("push", "origin", "master")

git("checkout", "release")
commit("R")
git("push", "origin", "release")

# make commit on release branch
commit("A")

# use non-standard base
gh_submit("Initial 1", base="release")

if is_direct():
    assert_github_state(
        """\
        [O] #500 Commit A (gh/ezyang/1/head -> release)

            This is commit A

            * 6ba7821 Initial 1 on "Commit A"

        Repository state:

            * 6ba7821 (gh/ezyang/1/next, gh/ezyang/1/head)
            |    Initial 1 on "Commit A"
            * 9ac8806 (release)
            |    Commit R
            * dc8bfe4
                 Initial commit
        """
    )
else:
    assert_github_state(
        """\
        [O] #500 Commit A (gh/ezyang/1/head -> gh/ezyang/1/base)

            Stack:
            * __->__ #500

            This is commit A

            * 60198a4 Initial 1 on "Commit A"

        Repository state:

            * 60198a4 (gh/ezyang/1/head)
            |    Initial 1 on "Commit A"
            * 78d3774 (gh/ezyang/1/base)
                 Update base for Initial 1 on "Commit A"
        """
    )

ok()
